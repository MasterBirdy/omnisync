{"version":3,"sources":["GrantCard.js","App.js","index.js"],"names":["GrantCard","data","clickHandler","solicitation_title","solicitation_number","solicitation_agency_url","open_date","close_date","agency","favorite","cardTitle","Card","className","Header","Body","Title","trim","Subtitle","Button","variant","onClick","href","target","rel","ListGroup","ListGroupItem","App","useState","grants","setGrants","loading","setLoading","downloaded","setDownloaded","useEffect","a","axios","grantData","map","grant","fetchData","exportGrants","filteredGrants","filter","post","response","fileToSave","Blob","JSON","stringify","type","name","download","oneGrant","some","rowsGrants","chunk","Navbar","bg","expand","Container","Brand","disabled","style","color","row","index","Row","id","split","reduce","b","charCodeAt","Col","md","number","title","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52e889d6.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Button from \"react-bootstrap/Button\";\nimport { BsStarFill, BsStar } from \"react-icons/bs\";\n\nconst GrantCard = ({ data, clickHandler }) => {\n    const { solicitation_title, solicitation_number, solicitation_agency_url, open_date, close_date, agency, favorite } = data;\n\n    let cardTitle = solicitation_title;\n\n    return (\n        <Card className=\"grant-card\">\n            <Card.Header>\n                <h5 className=\"grant-card-title\">{cardTitle}</h5>\n            </Card.Header>\n            <Card.Body>\n                <Card.Title>{solicitation_number ? solicitation_number.trim() : \"N/A\"}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">{agency}</Card.Subtitle>\n                <Button variant=\"success\" onClick={clickHandler}>\n                    <div className=\"button-container\">\n                        {favorite ? <BsStarFill className=\"star-icon\" /> : <BsStar className=\"star-icon\" />}\n                        {favorite ? \"Favorited!\" : \"Add Favorite\"}\n                    </div>\n                </Button>\n                {solicitation_agency_url && (\n                    <a href={solicitation_agency_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Button className=\"ml-2\">Link</Button>\n                    </a>\n                )}\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n                <ListGroupItem>Open Date: {open_date}</ListGroupItem>\n                <ListGroupItem>Close Date: {close_date}</ListGroupItem>\n            </ListGroup>\n        </Card>\n    );\n};\n\nexport default GrantCard;\n","import Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport GrantCard from \"./GrantCard\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { chunk } from \"lodash\";\nimport download from \"js-file-download\";\nimport \"./App.css\";\n\nconst hashCode = (s) => s.split(\"\").reduce((a, b) => ((a << 5) - a + b.charCodeAt(0)) | 0, 0);\n\nfunction App() {\n    const [grants, setGrants] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [downloaded, setDownloaded] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const { data } = await axios(\"/api/grants\");\n            const grantData = data.map((grant) => ({\n                ...grant,\n                favorite: false,\n            }));\n            setGrants(grantData);\n            setLoading(false);\n        };\n        fetchData();\n    }, []);\n\n    const grantHandler = (number, title) => {\n        setGrants((prevState) =>\n            prevState.map((grant) => {\n                if (grant.solicitation_number === number && grant.solicitation_title === title) {\n                    return {\n                        ...grant,\n                        favorite: !grant.favorite,\n                    };\n                }\n                return grant;\n            })\n        );\n        setDownloaded(false);\n    };\n\n    const exportGrants = async () => {\n        const filteredGrants = grants.filter((grant) => grant.favorite).map(({ solicitation_title, solicitation_number }) => ({ solicitation_title, solicitation_number }));\n        const response = await axios.post(\"/api/download\", {\n            grants: filteredGrants,\n        });\n        var fileToSave = new Blob([JSON.stringify(response.data)], {\n            type: \"application/json\",\n            name: \"grants.json\",\n        });\n        download(fileToSave, \"grants.json\");\n        setDownloaded(true);\n    };\n\n    const oneGrant = grants.some((grant) => grant.favorite);\n\n    const rowsGrants = chunk(grants, 2);\n    return (\n        <div className=\"App\">\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"#home\">OmniSync</Navbar.Brand>\n                </Container>\n            </Navbar>\n            <Container>\n                <h2 className=\"my-3\">Grant Cards</h2>\n                <h4 className=\"my-1\">Export Grants</h4>\n                <div className=\"mb-3\">\n                    <Button disabled={!oneGrant} variant={oneGrant ? \"primary\" : \"secondary\"} onClick={exportGrants}>\n                        Export\n                    </Button>\n                    {downloaded && (\n                        <p className=\"my-1\" style={{ color: \"green\" }}>\n                            Downloaded!\n                        </p>\n                    )}\n                </div>\n                {loading && <p>Loading...</p>}\n                {!loading &&\n                    rowsGrants.map((row, index) => (\n                        <Row key={index} className=\"row-size\">\n                            {row.map((grant) => {\n                                const id = hashCode(`${grant.solicitation_number ? \"0\" : grant.solicitation_number}${grant.solicitation_title}`);\n                                return (\n                                    <Col key={id} md={6} className=\"d-flex align-items-stretch cell-size\">\n                                        <GrantCard data={grant} clickHandler={() => grantHandler(grant.solicitation_number, grant.solicitation_title)} />\n                                    </Col>\n                                );\n                            })}\n                        </Row>\n                    ))}\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}